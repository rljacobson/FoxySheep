# This YAML file contains lots of data to
# check parsing from Mathematica InputForm
# to Mathematica to Python


numberLiteral:

  -
    # One digit
    InputForm: 1
    tree: "(prog (expr (numberLiteral '1')))"
    python: (1)

  -
    # One More than one dgit
    InputForm: 12
    tree: "(prog (expr (numberLiteral '12')))"
    python: (12)

  -
    # Decimal
    InputForm: 167.5
    tree: "(prog (expr (numberLiteral '167.5')))"
    python: Decimal(167.5)

  -
    # Base 8 representation
    InputForm: 15^^8
    tree: "(prog (expr (numberLiteral '15' '^^8')))"
    python: int(15, 8)

  -
    # InputForm: 55*^2
    # tree: "(prog (expr (numberLiteral '55' (numberLiteralExponent '*^' '2'))))"

  # -
  #   InputForm: "10^^3.58.3"
  #   tree: "(expr (numberLiteral '55' '^^8.3')))"

  -
    # Machine-specific literal precision
    InputForm: 132`
    tree: "(prog (expr (numberLiteral '132' (numberLiteralPrecision '`'))))"
    python: (132)

  -
    # Base 8 with Machine-specific literal precision
    InputForm: 167^^8``5
    tree: "(prog (expr (numberLiteral '167' '^^8' (numberLiteralPrecision '``' '5'))))"
    python: int(167, 8)

##############

binOp:
    -
      InputForm: 1 ** 10
      tree: "(prog (expr (expr (numberLiteral '1')) '**' (expr (numberLiteral '10'))))"
      python: "(1 * 10)"

    -
      InputForm: 1 / 10 3
      tree: "(1 / 10 * 3)"

UnaryOp:
    -
      InputForm: +(1)
      tree: "prog (expr '+' (expr '(' (expr (numberLiteral '1')) ')')))"
      python: (+1)

Symbol:
    -
      InputForm: x
      tree: "(prog (expr (symbol x)))"
      python: x

    -
      InputForm: x
      tree: "(prog (expr (expr (expr (symbol x)) '^' (expr (numberLiteral '2'))) '+' (expr (expr (symbol y)) '^' (expr (numberLiteral '2')))))"
      python: (x ** 2 + y ** 2)
